#+Title: Ringo's blog
#+AUTHOR: Ringo Stark
#+DATE: \today
#+COMMENT: 

#+SETUPFILE: "./assets/latex/report-main.org"

#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE: vi

#+EXCLUDE_TAGS: noexport

#+hugo_auto_set_lastmod: t
#+hugo_base_dir: .
#+hugo_section: .

* Posts
:properties:
:export_hugo_section: posts
:end:
** Hello There!                   :some:tags:
:properties:
:export_file_name: hello
:end:
General Kenobi
** ther post
:properties:
:export_file_name: other-post
:end:
Keep bloggin

** Biến số của Intergrowth-21 trong SymjaBlog nghiêm túc của tôi 
:PROPERTIES:
:CREATED: [2024-04-13 Sat 14:15]
:export_file_name: intergrwon
:END:

Tôi quyết định sử dụng Intergrowth-21 làm chỉ số tham khảo chính, và lấy số liệu từ trang web chính thức ở đây [[https://intergrowth21.tghn.org/fetal-growth/#fg1][Intergrowth-21 tables]]. Từ các bảng số này, tham khảo cả bảng giá trị và z-score, tôi chỉ giữ lại 2 chỉ số cơ bản của phân phối là ~mean~ và ~sd~. Sau đó tôi chuyển qua dạng Associations của Symja thì được các số liệu như sau.

#+NAME: Intergrowth-21 constants (mean,sd) for bpd, hc, fl, ac, weight
#+BEGIN_SRC symja
{
bpdI21 = <| 14->{29.6,1.8}, 15->{32.6,1.8}, 16->{35.6,2}, 17->{38.8,2}, 18->{42,2.1}, 19->{45.2,2.2}, 20->{48.4,2.3}, 21->{51.7,2.4}, 22->{55,2.4}, 23->{58.2,2.6}, 24->{61.4,2.6}, 25->{64.5,2.8}, 26->{67.6,2.8}, 27->{70.6,2.9}, 28->{73.5,2.9}, 29->{76.3,3}, 30->{78.9,3.1}, 31->{81.4,3.1}, 32->{83.8,3.1}, 33->{85.9,3.3}, 34->{87.9,3.3}, 35->{89.7,3.4}, 36->{91.2,3.5}, 37->{92.5,3.6}, 38->{93.6,3.6}, 39->{94.4,3.8}, 40->{94.9,3.9} |>,

hcI21 = <|14->{97.9,5.6},15->{110.4,5.9},16->{122.9,6.3},17->{135.4,6.6},18->{147.9,6.9},19->{160.3,7.1},20->{172.5,7.4},21->{184.5,7.7},22->{196.3,7.9},23->{207.8,8.1},24->{219.1,8.3},25->{230,8.4},26->{240.5,8.6},27->{250.6,8.8},28->{260.4,8.9},29->{269.6,9.1},30->{278.4,9.2},31->{286.6,9.5},32->{294.4,9.6},33->{301.5,9.9},34->{308.1,10.1},35->{314.1,10.4},36->{319.4,10.8},37->{324.1,11.2},38->{328.1,11.6},39->{331.4,12.2},40->{333.9,13}|>,

flI21 = <| 14->{13.1,1.5}, 15->{16.3,1.6}, 16->{19.5,1.6}, 17->{22.5,1.7}, 18->{25.5,1.7}, 19->{28.5,1.7}, 20->{31.3,1.8}, 21->{34.1,1.8}, 22->{36.7,1.9}, 23->{39.4,1.9}, 24->{41.9,1.9}, 25->{44.4,1.9}, 26->{46.7,2.1}, 27->{49.1,2}, 28->{51.3,2.1}, 29->{53.4,2.2}, 30->{55.5,2.3}, 31->{57.5,2.3}, 32->{59.5,2.3}, 33->{61.3,2.5}, 34->{63.1,2.5}, 35->{64.8,2.6}, 36->{66.4,2.7}, 37->{68,2.8}, 38->{69.4,3}, 39->{70.8,3.1}, 40->{72.1,3.3} |>,

acI21 = <| 14->{80.6,4.1}, 15->{91.9,4.8}, 16->{103.2,5.4}, 17->{114.4,6}, 18->{125.6,6.6}, 19->{136.7,7.1}, 20->{147.7,7.7}, 21->{158.7,8.1}, 22->{169.6,8.6}, 23->{180.4,9.1}, 24->{191.2,9.4}, 25->{201.8,10}, 26->{212.4,10.4}, 27->{222.9,10.8}, 28->{233.3,11.3}, 29->{243.6,11.8}, 30->{253.8,12.4}, 31->{263.9,13}, 32->{273.9,13.6}, 33->{283.8,14.4}, 34->{293.6,15.1}, 35->{303.3,16}, 36->{312.8,17.1}, 37->{322.3,18.1}, 38->{331.6,19.4}, 39->{340.8,20.8}, 40->{349.8,22.4} |>,

weightI21 = <| 14->{ 0.01, 0.01}, 15->{ 0.01, 0.01}, 16->{ 0.01, 0.01}, 17->{ 0.01, 0.01}, 18->{ 0.01, 0.01}, 19->{ 0.01, 0.01}, 20->{ 0.01, 0.01}, 21->{ 0.01, 0.01}, 22->{525,40}, 23->{592,50}, 24->{668,63}, 25->{756,77}, 26->{856,94}, 27->{969,114}, 28->{1097,137}, 29->{1239,163}, 30->{1396,192}, 31->{1568,224}, 32->{1755,256}, 33->{1954,290}, 34->{2162,323}, 35->{2378,353}, 36->{2594,380}, 37->{2806,401}, 38->{3006,415}, 39->{3186,420}, 40->{3338,416} |>
}
#+END_SRC

Lưu ý là trong Intergrowth-21, các tuổi thai từ 14 đến 21 tuần không có phân bố cân nặng thai, nên nếu các tính toán ở tuổi thai này sẽ sinh ra lỗi do không tồn tại giá trị. Vì vậy tôi đồng nhất hóa các biến số ở đây bằng 0.01 (không thể bằng 0 được, vì khi đó cũng sinh ra lỗi) để các tính toán được thông suốt, nhưng hoàn toàn không có ý nghĩa nữa.

** Hàm Hadlock có so sánh tuổi thai theo tiêu chuẩn Intergrowth-21
:PROPERTIES:
:CREATED: [2024-04-13 Sat 14:16]
:export_file_name: hadlock
:END:

Việc tính toán cân nặng thai sẽ không có ý nghĩa, nếu không biết cân nặng đó có đúng chuẩn so với tuổi thai hiện tại hay không. Vì vậy, nhất thiết phải có một hàm so sánh cân nặng thai hiện tại và suy ra bách phân vị mà thai đang đứng.

Tiêu chuẩn số liệu nên dựa vào chuẩn nào, Intergrowth-21 chăng?

EDITED: [2024-02-26 Mon 21:12]
Đây là đoạn mã hoàn chỉnh của hàm Hadlock mở rộng có tính percentiles theo tiêu chuẩn Intergrowth-21 cho thai

#+NAME: extended Hadlock
#+PARAMETERS: age, bpd, hc, fl, ac
#+COMMENT: tính cân nặng thai theo công thức Hadlock và phân bố của các chỉ số
#+BEGIN_SRC symja
{
{
m = 1,

s = 2,

bpdI21 = <| 14->{29.6,1.8}, 15->{32.6,1.8}, 16->{35.6,2}, 17->{38.8,2}, 18->{42,2.1}, 19->{45.2,2.2}, 20->{48.4,2.3}, 21->{51.7,2.4}, 22->{55,2.4}, 23->{58.2,2.6}, 24->{61.4,2.6}, 25->{64.5,2.8}, 26->{67.6,2.8}, 27->{70.6,2.9}, 28->{73.5,2.9}, 29->{76.3,3}, 30->{78.9,3.1}, 31->{81.4,3.1}, 32->{83.8,3.1}, 33->{85.9,3.3}, 34->{87.9,3.3}, 35->{89.7,3.4}, 36->{91.2,3.5}, 37->{92.5,3.6}, 38->{93.6,3.6}, 39->{94.4,3.8}, 40->{94.9,3.9} |>,

hcI21 = <|14->{97.9,5.6},15->{110.4,5.9},16->{122.9,6.3},17->{135.4,6.6},18->{147.9,6.9},19->{160.3,7.1},20->{172.5,7.4},21->{184.5,7.7},22->{196.3,7.9},23->{207.8,8.1},24->{219.1,8.3},25->{230,8.4},26->{240.5,8.6},27->{250.6,8.8},28->{260.4,8.9},29->{269.6,9.1},30->{278.4,9.2},31->{286.6,9.5},32->{294.4,9.6},33->{301.5,9.9},34->{308.1,10.1},35->{314.1,10.4},36->{319.4,10.8},37->{324.1,11.2},38->{328.1,11.6},39->{331.4,12.2},40->{333.9,13}|>,

flI21 = <| 14->{13.1,1.5}, 15->{16.3,1.6}, 16->{19.5,1.6}, 17->{22.5,1.7}, 18->{25.5,1.7}, 19->{28.5,1.7}, 20->{31.3,1.8}, 21->{34.1,1.8}, 22->{36.7,1.9}, 23->{39.4,1.9}, 24->{41.9,1.9}, 25->{44.4,1.9}, 26->{46.7,2.1}, 27->{49.1,2}, 28->{51.3,2.1}, 29->{53.4,2.2}, 30->{55.5,2.3}, 31->{57.5,2.3}, 32->{59.5,2.3}, 33->{61.3,2.5}, 34->{63.1,2.5}, 35->{64.8,2.6}, 36->{66.4,2.7}, 37->{68,2.8}, 38->{69.4,3}, 39->{70.8,3.1}, 40->{72.1,3.3} |>,

acI21 = <| 14->{80.6,4.1}, 15->{91.9,4.8}, 16->{103.2,5.4}, 17->{114.4,6}, 18->{125.6,6.6}, 19->{136.7,7.1}, 20->{147.7,7.7}, 21->{158.7,8.1}, 22->{169.6,8.6}, 23->{180.4,9.1}, 24->{191.2,9.4}, 25->{201.8,10}, 26->{212.4,10.4}, 27->{222.9,10.8}, 28->{233.3,11.3}, 29->{243.6,11.8}, 30->{253.8,12.4}, 31->{263.9,13}, 32->{273.9,13.6}, 33->{283.8,14.4}, 34->{293.6,15.1}, 35->{303.3,16}, 36->{312.8,17.1}, 37->{322.3,18.1}, 38->{331.6,19.4}, 39->{340.8,20.8}, 40->{349.8,22.4} |>,

weightI21 = <| 14->{ 0.01, 0.01}, 15->{ 0.01, 0.01}, 16->{ 0.01, 0.01}, 17->{ 0.01, 0.01}, 18->{ 0.01, 0.01}, 19->{ 0.01, 0.01}, 20->{ 0.01, 0.01}, 21->{ 0.01, 0.01}, 22->{525,40}, 23->{592,50}, 24->{668,63}, 25->{756,77}, 26->{856,94}, 27->{969,114}, 28->{1097,137}, 29->{1239,163}, 30->{1396,192}, 31->{1568,224}, 32->{1755,256}, 33->{1954,290}, 34->{2162,323}, 35->{2378,353}, 36->{2594,380}, 37->{2806,401}, 38->{3006,415}, 39->{3186,420}, 40->{3338,416} |>,

ageI21 = Round(age),

BPD1 = bpd / 10,

HC1 = hc / 10,

FL1 = fl / 10,

AC1 = ac / 10,

WEIGHT = Round(10^
If (Or (AC1 <= 0, FL1 <= 0),
    -1,
    If (HC1 <= 0,
        If (BPD1 <= 0,
            1.304 + 0.05281 * AC1 + 0.1938 * FL1 - 0.004 * AC1 * FL1,
            1.335 - 0.0034 * AC1 * FL1 + 0.0316 * BPD1 + 0.0457 * AC1 + 0.1623 * FL1),
        If (BPD1 <= 0,
            1.326 - 0.00326 * AC1 * FL1 + 0.0107 * HC1 + 0.0438 * AC1 + 0.158 * FL1,
            1.3596 - 0.00386 * AC1 * FL1 + 0.0064 * HC1 + 0.00061 * BPD1 * AC1 + 0.0424 * AC1 + 0.174 * FL1)
    )
)
),

bpdPercentile = Round(100 * CDF(NormalDistribution(bpdI21[ageI21][[m]],bpdI21[ageI21][[s]]),bpd)),

hcPercentile = Round(100 * CDF(NormalDistribution(hcI21[ageI21][[m]],hcI21[ageI21][[s]]),hc)),

flPercentile = Round(100 * CDF(NormalDistribution(flI21[ageI21][[m]],flI21[ageI21][[s]]),fl)),

acPercentile = Round(100 * CDF(NormalDistribution(acI21[ageI21][[m]],acI21[ageI21][[s]]),ac)),

weightPercentile = Round(100 * CDF(NormalDistribution(weightI21[ageI21][[m]],weightI21[ageI21][[s]]),WEIGHT))
}[[14]],
  hcPercentile, flPercentile, acPercentile, WEIGHT, weightPercentile}
#+END_SRC

NOTE: Ở đây tôi sử dụng một thủ thuật để giải quyết vấn đề chuỗi lệnh của symja chưa được hoàn thiện. Chuỗi lệnh của symja được nối tiếp nhau bằng dấu chấm phẩy ";", và câu lệnh cuối cùng sẽ được in ra màn hình, điều đó ẩn ý là câu lệnh cuối là câu lệnh in ra các biến số cần in. Nhưng trong phiên bản trên điện thoại, nó lại in ra câu lệnh đầu tiên, tôi thử chèn câu lệnh in lên đầu, nhưng không đạt được kết quả mong muốn. Vì vậy, tôi sử dụng một thủ thuật trong List, nghĩa là toàn bộ chương trình này chỉ là một chuỗi, chuỗi đầu tiên tính toán tất cả các công thức cần thiết và in ra biến số đầu tiên, các biến số sau đó được tùy chọn để in ra tiếp theo, nhờ đã có kết quả tính toán ở chuỗi trước.
** Cấu hình vật chất - tinh thần
:PROPERTIES:
:CREATED: [2024-04-12 Fri]
:export_file_name: custom-material
:END:
*** Các công việc tôi đang làm với orgmode, hypersnippets giống như đọc tất cả và chọn lọc, nhưng vẫn không làm mất đi tính kiểm soát đối với toàn diện ngôn ngữ
:PROPERTIES:
:CREATED: [2024-04-08 Mon 15:38]
:END:

Cách này rất hay, nó làm tôi tăng năng suất vì đi lại lối mòn, nhưng vẫn không giới hạn và ràng buộc tôi vào một vài mẫu hình, tôi vẫn toàn quyền đối với toàn bộ hệ thống, nhờ vào các documentation chặt chẽ câu lệnh tùy chỉnh.
**** Suy nghĩ về cấu hình vật chất mà tôi thiết đặt
:PROPERTIES:
:CREATED: [2024-04-09 Tue 07:00]
:LOCATION:
:END:
**** Suy nghĩ về các phương pháp lưu trữ toàn bộ thông tin để tra cứu và áp dụng ngay, trong khi vẫn duy trì được tính tinh gọn của các thiết đặt và tinh chỉnh
:PROPERTIES:
:CREATED: [2024-04-09 Tue 09:18]
:END:

Điều này chính là nguyên tắc lazy của haskell mà tôi đã nhắc [[id:1400f5b4-ecda-4f1f-af4d-aadf3d7c0f06][ở đây]], đó cũng là vai trò của một cái thư viện. Tuy nhiên, điều tôi muốn đạt được khác cái thư viện ở chỗ, nó phải có một hệ thống query hiệu quả. Bởi vì, dù tôi có đọc nhiều đến đâu, nhưng tôi không thể query lại để tham khảo chính xác thì điều đó cũng trỏ nên vô ích.

Chỉ có thể nhờ cậy vào AI trong phương án query này.
